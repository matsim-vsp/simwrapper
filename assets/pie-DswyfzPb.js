import{d as l,g as n,U as d,B as s,S as o,n as h}from"./index-BSRT1qCd.js";import{V as c}from"./VuePlotly-DvKdPuD6.js";import{b as u}from"./LayoutManager-BWVEQ1f-.js";import{b as m}from"./ColorsAndWidths-Cxe49fkT.js";import"./HTTPFileSystem-CM0ZTrcf.js";import"./fxp-DXsl1rlp.js";import"./index-r3K0jT4B.js";import"./index-SKlkcK94.js";import"./SW_logo_white-BC-0sXUm.js";import"./TopSheet-ld6OJ_GO.js";import"./papaparse.min-CHKAvxeS.js";import"./DashboardDataManager-C_pYT4V3.js";import"./group-DobYzF2-.js";import"./index-_doEQLKC.js";import"./color-DZRtpOAM.js";import"./cubehelix-Bg3rkAQA.js";import"./Set3-Dyl9Llxj.js";import"./rainbow-Dz4seJAz.js";const p=l({name:"PieChartPanel",components:{VuePlotly:c},props:{fileSystemConfig:{type:Object,required:!0},subfolder:{type:String,required:!0},files:{type:Array,required:!0},config:{type:Object,required:!0},cardTitle:{type:String,required:!0},cardId:String,datamanager:{type:Object,required:!0}},data:()=>({globalState:n.state,id:"pie-"+Math.floor(1e12*Math.random()),dataSet:{},YAMLrequirementsPie:{dataset:"",useLastRow:""},colorMap:{},layout:{height:300,margin:{t:4,b:4,l:0,r:0,pad:2},font:{color:"#444444",family:d},xaxis:{automargin:!0,autorange:!0,title:{text:"",standoff:12},animate:!0},yaxis:{automargin:!0,autorange:!0,title:{text:"",standoff:16},animate:!0},legend:{orientation:"v",x:1,y:1}},data:[{sort:!1,labels:[],values:[],type:"pie",hole:0,textinfo:"label+percent",textposition:"inside",automargin:!0,marker:void 0}],options:{displaylogo:!1,responsive:!0,modeBarButtonsToRemove:["pan2d","zoom2d","select2d","lasso2d","zoomIn2d","zoomOut2d","autoScale2d","hoverClosestCartesian","hoverCompareCartesian","resetScale2d","toggleSpikelines","resetViewMapbox"],toImageButtonOptions:{format:"png",filename:"pie-chart",width:null,height:null}}}),async mounted(){this.updateTheme(),this.options.toImageButtonOptions.filename=u(this.cardTitle,this.subfolder),this.dataSet=await this.loadData(),this.updateChart(),this.$emit("dimension-resizer",{id:this.cardId,resizer:this.changeDimensions}),this.$emit("isLoaded")},beforeDestroy(){this.datamanager?.removeFilterListener({...this.config,subfolder:this.subfolder},this.handleFilterChanged)},watch:{"globalState.isDarkMode"(){this.updateTheme()}},methods:{changeDimensions(t){this.layout=Object.assign({},this.layout,t)},handleFilterChanged(){if(!this.datamanager)return;const{filteredRows:t}=this.datamanager.getFilteredDataset(this.config);if(!t||!t.length)this.dataSet={allRows:{}};else{const e={},a=Object.keys(t[0]);a.forEach(i=>e[i]={name:i,values:[]}),t.forEach(i=>{a.forEach(r=>e[r].values.push(i[r]))}),this.dataSet={allRows:e}}this.updateChart()},updateTheme(){const t={paper_bgcolor:s[this.globalState.colorScheme],plot_bgcolor:s[this.globalState.colorScheme],font:{color:this.globalState.isDarkMode?"#cccccc":"#444444"}};this.layout=Object.assign({},this.layout,t)},async loadData(){try{this.validateYAML();let t=await this.datamanager.getDataset(this.config,{subfolder:this.subfolder});if(!this.config.filters)return t;this.datamanager.addFilterListener({...this.config,subfolder:this.subfolder},this.handleFilterChanged);for(const[e,a]of Object.entries(this.config.filters)){const i={dataset:this.config.dataset,column:e,value:a,range:Array.isArray(a)};this.datamanager.setFilter(i)}return{allRows:{}}}catch(t){this.$emit("error",`Error loading: ${this.subfolder}/${this.config.dataset}`),console.error(""+t)}return{allRows:{}}},validateYAML(){for(const t in this.YAMLrequirementsPie)t in this.config||this.$emit("error",{type:o.ERROR,msg:`Pie chart missing required key: ${t}`,desc:`Required keys: ${Object.keys(this.YAMLrequirementsPie)}`})},updateChart(){try{this.config.groupBy?this.updateChartWithGroupBy():this.updateChartSimple()}catch(t){const e=""+t;this.$emit("error",{type:o.ERROR,msg:e,desc:"Add a desription..."})}},updateChartWithGroupBy(){},updateChartSimple(){const t=this.dataSet.allRows||{},e=Object.keys(t);this.data[0].labels=e,this.data[0].values=Object.values(t);const a=this.config.categories||[...new Set(e)];this.colorMap=m(a,this.config.colorRamp),this.data[0].marker={colors:e.map(i=>this.colorMap[i])}}}});var f=function(){var e=this,a=e._self._c;return e._self._setupProxy,e.data[0].values.length?a("VuePlotly",{staticClass:"myplot",attrs:{data:e.data,layout:e.layout,options:e.options,id:e.id}}):e._e()},g=[],y=h(p,f,g,!1,null,"e79ea61c");const P=y.exports;export{P as default};
