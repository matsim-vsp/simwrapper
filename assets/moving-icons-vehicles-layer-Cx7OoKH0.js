import{G as d}from"./index-DgdUD6UN.js";import{v as y,a as M,f as v,I as z}from"./icon-manager-6aODVFWE.js";import{a as C,p as S,b as I,M as P,G as b,l as x}from"./set-rtl-text-plugin-FQQ7PIy4.js";const h=[25,220,64,255],E={iconAtlas:{type:"image",value:null,async:!0},iconMapping:{type:"object",value:{},async:!0},sizeScale:{type:"number",value:1,min:0},billboard:!1,sizeUnits:"pixels",sizeMinPixels:{type:"number",min:0,value:0},sizeMaxPixels:{type:"number",min:0,value:Number.MAX_SAFE_INTEGER},alphaCutoff:{type:"number",value:.05,min:0,max:1},iconStill:{type:"object",value:null},latitudeCorrectionFactor:.8,isColorOccupancy:!1,getIcon:{type:"accessor",value:"vehicle"},getBOffsets:{type:"accessor",value:[0,0]},getBIconFrames:{type:"accessor",value:[0,0,256,256]},getBColorModes:{type:"accessor",value:1},getColor:{type:"accessor",value:h},getColorCode:{type:"accessor",value:0},getSize:{type:"accessor",value:1},getAngle:{type:"accessor",value:0},getPixelOffset:{type:"accessor",value:[0,0]},getPathStart:{type:"accessor",value:null},getPathEnd:{type:"accessor",value:null},getTimeStart:{type:"accessor",value:null},getTimeEnd:{type:"accessor",value:null},currentTime:{type:"number",value:0},pickable:{type:"boolean",value:!0},onIconError:{type:"function",value:null,compare:!1,optional:!0}};class f extends C{getShaders(){const t=this.props.isColorOccupancy?y:M;return super.getShaders({vs:t,fs:v,modules:[S,I]})}initializeState(){this.state={iconManager:new z(this.context.gl,{onUpdate:this._onUpdate.bind(this),onError:this._onError.bind(this)})},this.getAttributeManager().addInstanced({instanceTimestamps:{size:1,accessor:"getTimeStart"},instanceTimestampsNext:{size:1,accessor:"getTimeEnd"},instanceStartPositions:{size:2,accessor:"getPathStart"},instanceEndPositions:{size:2,accessor:"getPathEnd"},instanceSizes:{size:1,transition:!0,accessor:"getSize",defaultValue:1},instanceOffsets:{size:2,defaultValue:[0,0],accessor:"getBOffsets"},instanceIconFrames:{size:4,defaultValue:[0,0,256,256],accessor:"getBIconFrames"},instanceColorModes:{size:1,type:d.UNSIGNED_BYTE,defaultValue:1,accessor:"getBColorModes"},instanceColors:{size:this.props.colorFormat.length,type:d.UNSIGNED_BYTE,normalized:!0,transition:!0,accessor:"getColor",defaultValue:h},instanceColorCodes:{size:1,accessor:"getColorCode",defaultValue:0},instanceAngles:{size:1,transition:!0,accessor:"getAngle"},instancePixelOffset:{size:2,transition:!0,accessor:"getPixelOffset"}})}updateState({oldProps:t,props:e,changeFlags:a}){super.updateState({props:e,oldProps:t,changeFlags:a});const i=this.getAttributeManager(),{iconAtlas:n,iconMapping:c,data:l,getIcon:u}=e,{iconManager:s}=this.state;s.setProps({loadOptions:e.loadOptions});let o=!1;if(n||this.internalState.isAsyncPropLoading("iconAtlas")?(t.iconAtlas!==e.iconAtlas&&s.setProps({iconAtlas:n,autoPacking:!1}),t.iconMapping!==e.iconMapping&&(s.setProps({iconMapping:c}),o=!0)):s.setProps({autoPacking:!0}),(a.dataChanged||a.updateTriggersChanged&&(a.updateTriggersChanged.all||a.updateTriggersChanged.getIcon))&&s.setProps({data:l,getIcon:u}),o&&(i.invalidate("instanceOffsets"),i.invalidate("instanceIconFrames"),i.invalidate("instanceColorModes"),i.invalidate("instanceColorCodes")),a.extensionsChanged){const{gl:p}=this.context;this.state.model?.delete(),this.state.model=this._getModel(p),i.invalidateAll()}}get isLoaded(){return super.isLoaded&&this.state.iconManager.isLoaded}finalizeState(){super.finalizeState(),this.state.iconManager.finalize()}draw({uniforms:t}){const{sizeScale:e,sizeMinPixels:a,sizeMaxPixels:i,sizeUnits:n,billboard:c,alphaCutoff:l,currentTime:u,iconStill:s,pickable:o,latitudeCorrectionFactor:g}=this.props,{iconManager:p}=this.state,{viewport:m}=this.context,r=p.getTexture();r&&this.state.model.setUniforms(t).setUniforms({iconsTexture:r,iconsTextureDim:[r.width,r.height],sizeScale:e*(n==="pixels"?m.metersPerPixel:1),sizeMinPixels:a,sizeMaxPixels:i,billboard:c,alphaCutoff:l,currentTime:u,pickable:o,latitudeCorrectionFactor:g,iconStillOffsets:this.getInstanceOffset(s),iconStillFrames:this.getInstanceIconFrame(s)}).draw()}_getModel(t){const e=[-1,-1,-1,1,1,1,1,-1];return new P(t,{...this.getShaders(),id:this.props.id,geometry:new b({drawMode:d.TRIANGLE_FAN,attributes:{positions:{size:2,value:new Float32Array(e)}}}),isInstanced:!0})}_onUpdate(){this.setNeedsRedraw()}_onError(t){const{onIconError:e}=this.getCurrentLayer().props;e?e(t):x.error(t.error)()}getInstanceOffset(t){const e=this.state.iconManager.getIconMapping(t);return[e.width/2-e.anchorX||0,e.height/2-e.anchorY||0]}getInstanceColorMode(t){return this.state.iconManager.getIconMapping(t).mask?1:0}getInstanceIconFrame(t){const e=this.state.iconManager.getIconMapping(t);return[e.x||0,e.y||0,e.width||0,e.height||0]}}f.layerName="MovingVehicleLayer";f.defaultProps=E;export{f as I};
